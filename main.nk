# fn calculate_fib(n: i32): i32 {
# 	if compare.is_less_than_or_equals(n, 1) {
# 		return load n;
# 	};
# 
# 	pure i: i32 = calculate_fib(n - 1);
# 	pure i2: i32 = calculate_fib(n - 2);
# 
# 	return i + i2;
# }

atom add_two(i: i32): i32 {
	
	pure res: i32 = i + 2;
	return load res;
}

atom add_one(i: i32): i32 {
	
	pure do_math: i32 = i + 1;
	pure res_one: i32 = add_two(do_math);
	return load res_one;
}

fn main(): i32 {
	pure final_res: i32 = add_one(2);
	return load final_res;
}